# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-29 20:43+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../quickstarts/3_aspnetcore_and_apis.rst:3
msgid "ASP.NET Core and API access"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:4
msgid ""
"In the previous quickstarts we explored both API access and user "
"authentication. Now we want to bring the two parts together."
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:7
msgid ""
"The beauty of the OpenID Connect & OAuth 2.0 combination is, that you can"
" achieve both with a single protocol and a single exchange with the token"
" service."
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:9
msgid ""
"So far we only asked for identity resources during the token request, "
"once we start also including API resources, IdentityServer will return "
"two tokens: the identity token containing the information about the "
"authentication and session, and the access token to access APIs on behalf"
" of the logged on user."
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:13
msgid "Modifying the client configuration"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:14
msgid ""
"Updating the client configuration in IdentityServer is straightforward - "
"we simply need to add the ``api1`` resource to the allowed scopes list. "
"In addition we enable support for refresh tokens via the "
"``AllowOfflineAccess`` property::"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:43
msgid "Modifying the MVC client"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:44
msgid ""
"All that's left to do now in the client is to ask for the additional "
"resources via the scope parameter. This is done in the OpenID Connect "
"handler configuration::"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:67
msgid ""
"Since ``SaveTokens`` is enabled, ASP.NET Core will automatically store "
"the resulting access and refresh token in the authentication session. You"
" should be able to inspect the data on the page that prints out the "
"contents of the session that you created earlier."
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:71
msgid "Using the access token"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:72
msgid ""
"You can access the tokens in the session using the standard ASP.NET Core "
"extension methods that you can find in the "
"``Microsoft.AspNetCore.Authentication`` namespace::"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:77
msgid ""
"For accessing the API using the access token, all you need to do is "
"retrieve the token, and set it on your HttpClient::"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:91
msgid "Create a view called json.cshtml that outputs the json like this::"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:95
msgid ""
"Make sure the API is running, start the MVC client and call "
"``/home/CallApi`` after authentication."
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:98
msgid "Managing the access token"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:99
msgid ""
"By far the most complex task for a typical client is to manage the access"
" token. You typically want to"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:101
msgid "request the access and refresh token at login time"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:102
msgid "cache those tokens"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:103
msgid "use the access token to call APIs until it expires"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:104
msgid "use the refresh token to get a new access token"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:105
msgid "start over"
msgstr ""

#: ../quickstarts/3_aspnetcore_and_apis.rst:107
msgid ""
"ASP.NET Core has many built-in facility that can help you with those "
"tasks (like caching or sessions), but there is still quite some work left"
" to do. Feel free to have a look at `this "
"<https://github.com/IdentityModel/IdentityModel.AspNetCore>`_ library, "
"which can automate many of the boilerplate tasks."
msgstr ""

