# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-29 20:43+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../reference/api_resource.rst:3
msgid "API Resource"
msgstr ""

#: ../reference/api_resource.rst:4
msgid "This class model an API resource."
msgstr ""

#: ../reference/api_resource.rst:6
msgid "``Enabled``"
msgstr ""

#: ../reference/api_resource.rst:7
msgid ""
"Indicates if this resource is enabled and can be requested. Defaults to "
"true."
msgstr ""

#: ../reference/api_resource.rst:8 ../reference/api_resource.rst:29
msgid "``Name``"
msgstr ""

#: ../reference/api_resource.rst:9
msgid ""
"The unique name of the API. This value is used for authentication with "
"introspection and will be added to the audience of the outgoing access "
"token."
msgstr ""

#: ../reference/api_resource.rst:10 ../reference/api_resource.rst:31
msgid "``DisplayName``"
msgstr ""

#: ../reference/api_resource.rst:11 ../reference/api_resource.rst:13
#: ../reference/api_resource.rst:32 ../reference/api_resource.rst:34
msgid "This value can be used e.g. on the consent screen."
msgstr ""

#: ../reference/api_resource.rst:12 ../reference/api_resource.rst:33
msgid "``Description``"
msgstr ""

#: ../reference/api_resource.rst:14
msgid "``ApiSecrets``"
msgstr ""

#: ../reference/api_resource.rst:15
msgid ""
"The API secret is used for the introspection endpoint. The API can "
"authenticate with introspection using the API name and secret."
msgstr ""

#: ../reference/api_resource.rst:16
msgid "``AllowedAccessTokenSigningAlgorithms``"
msgstr ""

#: ../reference/api_resource.rst:17
msgid ""
"List of allowed signing algorithms for access token. If empty, will use "
"the server default signing algorithm."
msgstr ""

#: ../reference/api_resource.rst:18 ../reference/api_resource.rst:42
msgid "``UserClaims``"
msgstr ""

#: ../reference/api_resource.rst:19
msgid ""
"List of associated user claim types that should be included in the access"
" token."
msgstr ""

#: ../reference/api_resource.rst:22
msgid "``Scopes``"
msgstr ""

#: ../reference/api_resource.rst:21
msgid ""
"An API must have at least one scope. Each scope can have different "
"settings."
msgstr ""

#: ../reference/api_resource.rst:25
msgid "Scopes"
msgstr ""

#: ../reference/api_resource.rst:26
msgid ""
"In the simple case an API has exactly one scope. But there are cases "
"where you might want to sub-divide the functionality of an API, and give "
"different clients access to different parts."
msgstr ""

#: ../reference/api_resource.rst:30
msgid ""
"The unique name of the scope. This is the value a client will use for the"
" scope parameter in the authorize/token request."
msgstr ""

#: ../reference/api_resource.rst:35
msgid "``Required``"
msgstr ""

#: ../reference/api_resource.rst:36
msgid ""
"Specifies whether the user can de-select the scope on the consent screen "
"(if the consent screen wants to implement such a feature). Defaults to "
"false."
msgstr ""

#: ../reference/api_resource.rst:37
msgid "``Emphasize``"
msgstr ""

#: ../reference/api_resource.rst:38
msgid ""
"Specifies whether the consent screen will emphasize this scope (if the "
"consent screen wants to implement such a feature). Use this setting for "
"sensitive or important scopes. Defaults to false."
msgstr ""

#: ../reference/api_resource.rst:39
msgid "``ShowInDiscoveryDocument``"
msgstr ""

#: ../reference/api_resource.rst:40
msgid ""
"Specifies whether this scope is shown in the discovery document. Defaults"
" to true."
msgstr ""

#: ../reference/api_resource.rst:42
msgid ""
"List of associated user claim types that should be included in the access"
" token. The claims specified here will be added to the list of claims "
"specified for the API."
msgstr ""

#: ../reference/api_resource.rst:45
msgid "Convenience Constructor Behavior"
msgstr ""

#: ../reference/api_resource.rst:47
msgid "Just a note about the constructors provided for the ``ApiResource`` class."
msgstr ""

#: ../reference/api_resource.rst:49
msgid ""
"For full control over the data in the ``ApiResource``, use the default "
"constructor with no parameters. You would use this approach if you wanted"
" to configure multiple scopes per API. For example::"
msgstr ""

#: ../reference/api_resource.rst:72
msgid ""
"For simpler scenarios where you only require one scope per API, then "
"several convenience constructors which accept a ``name`` are provided. "
"For example::"
msgstr ""

#: ../reference/api_resource.rst:77
msgid "Using the convenience constructor is equivalent to this::"
msgstr ""

#: ../reference/api_resource.rst:96
msgid "Defining API resources in appsettings.json"
msgstr ""

#: ../reference/api_resource.rst:98
msgid ""
"The ``AddInMemoryApiResource`` extensions method also supports adding "
"clients from the ASP.NET Core configuration file. This allows you to "
"define static clients directly from the appsettings.json file::"
msgstr ""

#: ../reference/api_resource.rst:117
msgid ""
"Then pass the configuration section to the ``AddInMemoryApiResource`` "
"method::"
msgstr ""

